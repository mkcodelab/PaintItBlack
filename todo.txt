add some weird tools like animated tools:

select rain, click, droplets fell from top of canvas, and it will stain it with color etc.

whole canvas should be animated in requestAnimationFrame

*done
add layersService which will be holding layer stack for all backgrounds, added drawings etc.
it has to keep it in array

*done
add showcase canvas layer on which we will paint "animated" things like "drawed" square or ellipse etc.

*done
add opacity of pencil, just add rgba conversion from hex value, and set alpha to the value from range input

* done merging layers and saving to png file
add merge layers functionality for layers.service
mergeLayers(layer1, layer2) {
get image data from layer1 and layer2
delete layer1 and 2
this . _layers.splice()
then create new context
then add new layer with initialized context
then putImageData from layer1 and layer2
}

*done
saving image: create new context, draw imageData from all layers context consecutively,
 save as png
        <!-- add save options like format, quality -->



add invert color pencil


*done
fix the fullscreen mouse coordinates issue


insinde Layer class add operations array, it will be holding the ctx.imageData
and use it to create undo / redo functionality

rework the layer ui

*done partially
implement the wheel color picker / hsl / rgb etc...

add eyedropper (color picker from active layer (mouse pos, imageData
https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial/Pixel_manipulation_with_canvas
))

check how tool in toolbox can be refactored, like pass the drawing function to the tool constructor
and use it later in canvasSvc

add svg turbulences etc. to generate backgrounds, noises etc.

